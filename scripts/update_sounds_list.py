"""Script to fetch and process sound data from Amazon Ask Sound Library skill."""

import asyncio
from datetime import UTC, datetime
from pathlib import Path
from typing import Any, cast

import orjson
from aiohttp import ClientSession, ClientTimeout

# URL of the JSON file
url = "https://m.media-amazon.com/images/G/01/mobile-apps/dex/ask-tech-docs/ask-soundlibrary._TTH_.json"
destination = "src/aioamazondevices/sounds.py"


async def get_data() -> dict[str, Any]:
    """Get data from URL."""
    async with ClientSession() as session:
        resp = await session.get(url, timeout=ClientTimeout(10))
        return cast("dict[str,Any]", await resp.json())


async def process_data(data: dict[str, Any]) -> dict[str, Any]:
    """Process received data."""
    result = {}
    if "sounds" in data:
        for item in data["sounds"]:
            name = item.get("name")
            audio_path = item.get("audioFilePath")
            if name and audio_path:
                filename = audio_path.split("/")[-1]
                result[name] = filename
    return result


async def save_data(data: dict[str, Any]) -> None:
    """Save data."""
    data_json = orjson.dumps(
        data,
        option=orjson.OPT_INDENT_2,
    ).decode("utf-8")
    today = datetime.now(UTC).strftime("%Y-%m-%d %H:%M")
    with Path.open(Path(destination), mode="w", encoding="utf-8") as file:
        file.write(f'"""Generated by update_sounds_list.py [{today}]."""\n\n')
        file.write("SOUNDS_LIST = " + data_json)
        file.write("\n")


async def main() -> None:
    """Script main execution."""
    url_data = await get_data()
    processed_data = await process_data(data=url_data)
    await save_data(data=processed_data)


if __name__ == "__main__":
    asyncio.run(main())
